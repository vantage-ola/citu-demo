openapi: 3.0.3
info:
  title: Friend Group API
  version: 1.0.0
  description: API for managing friend groups, events, and speaker sessions
paths:
  /api/event-registrations/:
    get:
      operationId: event_registrations_list
      tags:
      - event-registrations
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventRegistration'
          description: ''
    post:
      operationId: event_registrations_create
      tags:
      - event-registrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRegistration'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRegistration'
          description: ''
  /api/event-registrations/{id}/:
    get:
      operationId: event_registrations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event registration.
        required: true
      tags:
      - event-registrations
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRegistration'
          description: ''
    put:
      operationId: event_registrations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event registration.
        required: true
      tags:
      - event-registrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRegistration'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRegistration'
          description: ''
    patch:
      operationId: event_registrations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event registration.
        required: true
      tags:
      - event-registrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventRegistration'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRegistration'
          description: ''
    delete:
      operationId: event_registrations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event registration.
        required: true
      tags:
      - event-registrations
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/events/:
    get:
      operationId: events_list
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
          description: ''
    post:
      operationId: events_create
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/events/{id}/:
    get:
      operationId: events_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: events_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    patch:
      operationId: events_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: events_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/group-memberships/:
    get:
      operationId: group_memberships_list
      tags:
      - group-memberships
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupMembership'
          description: ''
    post:
      operationId: group_memberships_create
      tags:
      - group-memberships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupMembership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupMembership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupMembership'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembership'
          description: ''
  /api/group-memberships/{id}/:
    get:
      operationId: group_memberships_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group membership.
        required: true
      tags:
      - group-memberships
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembership'
          description: ''
    put:
      operationId: group_memberships_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group membership.
        required: true
      tags:
      - group-memberships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupMembership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupMembership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupMembership'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembership'
          description: ''
    patch:
      operationId: group_memberships_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group membership.
        required: true
      tags:
      - group-memberships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupMembership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupMembership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupMembership'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembership'
          description: ''
    delete:
      operationId: group_memberships_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group membership.
        required: true
      tags:
      - group-memberships
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/groups/:
    get:
      operationId: groups_list
      tags:
      - groups
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
          description: ''
    post:
      operationId: groups_create
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/groups/{id}/:
    get:
      operationId: groups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    put:
      operationId: groups_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    patch:
      operationId: groups_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    delete:
      operationId: groups_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/payments/:
    get:
      operationId: payments_list
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MockPayment'
          description: ''
    post:
      operationId: payments_create
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MockPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MockPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MockPayment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MockPayment'
          description: ''
  /api/payments/{id}/:
    get:
      operationId: payments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this mock payment.
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MockPayment'
          description: ''
    put:
      operationId: payments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this mock payment.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MockPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MockPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MockPayment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MockPayment'
          description: ''
    patch:
      operationId: payments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this mock payment.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMockPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMockPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMockPayment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MockPayment'
          description: ''
    delete:
      operationId: payments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this mock payment.
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/speaker-availability/:
    get:
      operationId: speaker_availability_list
      tags:
      - speaker-availability
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpeakerAvailability'
          description: ''
    post:
      operationId: speaker_availability_create
      tags:
      - speaker-availability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpeakerAvailability'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SpeakerAvailability'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SpeakerAvailability'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeakerAvailability'
          description: ''
  /api/speaker-availability/{id}/:
    get:
      operationId: speaker_availability_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this speaker availability.
        required: true
      tags:
      - speaker-availability
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeakerAvailability'
          description: ''
    put:
      operationId: speaker_availability_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this speaker availability.
        required: true
      tags:
      - speaker-availability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpeakerAvailability'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SpeakerAvailability'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SpeakerAvailability'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeakerAvailability'
          description: ''
    patch:
      operationId: speaker_availability_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this speaker availability.
        required: true
      tags:
      - speaker-availability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSpeakerAvailability'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSpeakerAvailability'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSpeakerAvailability'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeakerAvailability'
          description: ''
    delete:
      operationId: speaker_availability_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this speaker availability.
        required: true
      tags:
      - speaker-availability
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/speakers/:
    get:
      operationId: speakers_list
      tags:
      - speakers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpeakerProfile'
          description: ''
    post:
      operationId: speakers_create
      tags:
      - speakers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpeakerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SpeakerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SpeakerProfile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeakerProfile'
          description: ''
  /api/speakers/{id}/:
    get:
      operationId: speakers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this speaker profile.
        required: true
      tags:
      - speakers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeakerProfile'
          description: ''
    put:
      operationId: speakers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this speaker profile.
        required: true
      tags:
      - speakers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpeakerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SpeakerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SpeakerProfile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeakerProfile'
          description: ''
    patch:
      operationId: speakers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this speaker profile.
        required: true
      tags:
      - speakers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSpeakerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSpeakerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSpeakerProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeakerProfile'
          description: ''
    delete:
      operationId: speakers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this speaker profile.
        required: true
      tags:
      - speakers
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        registrations:
          type: array
          items:
            $ref: '#/components/schemas/EventRegistration'
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        location:
          type: string
          maxLength: 200
        is_online:
          type: boolean
        meeting_link:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        max_participants:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        status:
          $ref: '#/components/schemas/EventStatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        group:
          type: integer
        speaker:
          type: integer
          nullable: true
        created_by:
          type: integer
      required:
      - created_at
      - created_by
      - date
      - description
      - end_time
      - group
      - id
      - location
      - registrations
      - start_time
      - title
      - updated_at
    EventRegistration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        registered_at:
          type: string
          format: date-time
          readOnly: true
        attended:
          type: boolean
        event:
          type: integer
        user:
          type: integer
      required:
      - event
      - id
      - registered_at
      - user
    EventStatusEnum:
      enum:
      - DRAFT
      - SCHEDULED
      - IN_PROGRESS
      - COMPLETED
      - CANCELLED
      type: string
      description: |-
        * `DRAFT` - Draft
        * `SCHEDULED` - Scheduled
        * `IN_PROGRESS` - In Progress
        * `COMPLETED` - Completed
        * `CANCELLED` - Cancelled
    Group:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/GroupMembership'
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        created_by:
          type: integer
      required:
      - created_at
      - created_by
      - description
      - id
      - members
      - name
      - updated_at
    GroupMembership:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
        joined_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        group:
          type: integer
      required:
      - group
      - id
      - joined_at
      - user
    MockPayment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          $ref: '#/components/schemas/MockPaymentStatusEnum'
        transaction_id:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        event:
          type: integer
        payer:
          type: integer
        recipient:
          type: integer
      required:
      - amount
      - created_at
      - event
      - id
      - payer
      - recipient
      - transaction_id
      - updated_at
    MockPaymentStatusEnum:
      enum:
      - PENDING
      - COMPLETED
      - FAILED
      - REFUNDED
      type: string
      description: |-
        * `PENDING` - Pending
        * `COMPLETED` - Completed
        * `FAILED` - Failed
        * `REFUNDED` - Refunded
    PatchedEvent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        registrations:
          type: array
          items:
            $ref: '#/components/schemas/EventRegistration'
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        location:
          type: string
          maxLength: 200
        is_online:
          type: boolean
        meeting_link:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        max_participants:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        status:
          $ref: '#/components/schemas/EventStatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        group:
          type: integer
        speaker:
          type: integer
          nullable: true
        created_by:
          type: integer
    PatchedEventRegistration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        registered_at:
          type: string
          format: date-time
          readOnly: true
        attended:
          type: boolean
        event:
          type: integer
        user:
          type: integer
    PatchedGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/GroupMembership'
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        created_by:
          type: integer
    PatchedGroupMembership:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
        joined_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        group:
          type: integer
    PatchedMockPayment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          $ref: '#/components/schemas/MockPaymentStatusEnum'
        transaction_id:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        event:
          type: integer
        payer:
          type: integer
        recipient:
          type: integer
    PatchedSpeakerAvailability:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        is_available:
          type: boolean
        speaker:
          type: integer
    PatchedSpeakerProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        availabilities:
          type: array
          items:
            $ref: '#/components/schemas/SpeakerAvailability'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        expertise:
          type: string
          maxLength: 200
        hourly_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        location:
          type: string
          maxLength: 200
        available_online:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_speaker:
          type: boolean
        bio:
          type: string
        profile_picture:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    RoleEnum:
      enum:
      - ADMIN
      - MEMBER
      type: string
      description: |-
        * `ADMIN` - Administrator
        * `MEMBER` - Member
    SpeakerAvailability:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        is_available:
          type: boolean
        speaker:
          type: integer
      required:
      - date
      - end_time
      - id
      - speaker
      - start_time
    SpeakerProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        availabilities:
          type: array
          items:
            $ref: '#/components/schemas/SpeakerAvailability'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        expertise:
          type: string
          maxLength: 200
        hourly_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        location:
          type: string
          maxLength: 200
        available_online:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - availabilities
      - created_at
      - expertise
      - hourly_rate
      - id
      - location
      - updated_at
      - user
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_speaker:
          type: boolean
        bio:
          type: string
        profile_picture:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
